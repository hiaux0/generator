import { addProjectToSln, addProjectReferenceToProject } from '../DotnetHelpers';
import BaseDotnetTemplateGenerator from '../BaseDotnetTemplateGenerator';
import { toPascalCase } from '../StringHelpers';

class SdkDotnetGenerator extends BaseDotnetTemplateGenerator {
  constructor(args: any, options: any) {
    super(args, options);
  }

  // Where you prompt users for options (where youâ€™d call this.prompt())
  public async prompting() {
    this.answers = await this.optionOrPrompt([
      this.slnPrompt,
      {
        type: 'input',
        name: 'name',
        message: 'Project name',
        default: `Wemogy.${toPascalCase(this.appname)}.Sdk.Public`
      },
      {
        type: 'input',
        name: 'targetDirectory',
        message: 'Where should the generated files be placed? (e.g. src/sdk/dotnet/public)'
      },
      {
        type: 'confirm',
        name: 'nuget',
        message: 'Packable via NuGet?',
        default: true,
        followUpQuestions: [
          {
            type: 'input',
            name: 'nugetRepoUrl',
            message: 'Nuget: GitHub Repository Url'
          },
          {
            type: 'input',
            name: 'nugetDescription',
            message: 'NuGet: Package description'
          }
        ]
      },
      {
        type: 'input',
        name: 'webservice',
        message:
          'Which webservice project should be used? (e.g. src/webservices/main/Wemogy.Sample.Webservices.Main.Api)'
      },
      {
        type: 'input',
        name: 'clientName',
        message: 'Client name for SDK?',
        default: `${toPascalCase(this.appname)}Client`
      },
      {
        type: 'input',
        name: 'swagger',
        message:
          'Which swagger file should be used? (e.g. src/webservices/main/Wemogy.Sample.Webservices.Main.Api/bin/Release/net6.0/swagger.public.json)'
      }
    ]);
  }

  //  Where you write the generator specific files (routes, controllers, etc)
  public writing(): void {
    this.composeSolutionIfNeeded();
    this.copyTemplateToDestination(this.destinationPath(this.answers.targetDirectory));

    // Merge in AutoGenerated Project
    this.composeWith('wemogy:sdk-auto-generate-dotnet', {
      solutionName: this.answers.solutionName,
      targetDirectory: this.answers.targetDirectory,
      name: this.answers.name,
      webservice: this.answers.webservice,
      swagger: this.answers.swagger,
      skipEclint: true
    });

    // Add XUnit Test Project
    this.composeWith('wemogy:test-dotnet', {
      targetDirectory: this.answers.targetDirectory,
      solutionName: this.answers.solutionName,
      folder: '',
      name: `${this.answers.name}.UnitTests`,
      skipEclint: true
    });
  }

  // Called last, cleanup, say good bye, etc
  public end(): void {
    // Add Library to Solution
    addProjectToSln.bind(this)(
      this.getSolutionPath(),
      this.destinationPath(`${this.answers.targetDirectory}/${this.answers.name}/${this.answers.name}.csproj`)
    );
  }
}

export default SdkDotnetGenerator;
